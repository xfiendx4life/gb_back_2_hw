version: "3.7"

networks:
  app-tier:
    driver: bridge

services:

  api:
    container_name: api
    build:
      dockerfile: Dockerfile
      context: .
    environment:
      - BROKER_ADDRESS=nats://nats:4222
      - REDIS=redis:6379
    ports:
      - 8081:8081
    depends_on:
      - nats
      - redis
    networks:
      - app-tier
  
  process:
    container_name: process
    build:
      dockerfile: Dockerfile2
      context: .
    environment:
    - TOPIC=rates1
    - BROKER_ADDRESS=nats://nats:4222
    - REDIS=redis:6379
    depends_on:
      nats:
        condition: service_started
      redis:
        condition: service_started
    networks:
      - app-tier

  process2:
    container_name: process2
    build:
      dockerfile: Dockerfile2
      context: .
    environment:
    - TOPIC=rates2
    - BROKER_ADDRESS=nats://nats:4222
    - REDIS=redis:6379
    depends_on:
      nats:
        condition: service_started
      redis:
        condition: service_started
    networks:
      - app-tier

  process3:
    container_name: process3
    build:
      dockerfile: Dockerfile2
      context: .
    environment:
    - TOPIC=rates3
    - BROKER_ADDRESS=nats://nats:4222
    - REDIS=redis:6379
    depends_on:
      nats:
        condition: service_started
      redis:
        condition: service_started
    networks:
      - app-tier

  nats:
    container_name: nats
    image: 'bitnami/nats:latest'
    ports:
      - 4222:4222
      - 6222:6222
      - 8222:8222
    networks:
      - app-tier
    # healthcheck:
    #   test: echo $$(wget --server-response http://nats:8222/varz 2>&1 | grep  '200 OK') | grep '200'  || exit 1
    #   interval: 20s
    #   timeout: 5s
    #   retries: 5
    #   start_period: 40s


  redis:
    container_name: redis
    image: redis:latest
    ports:
      - "6379:6379"
    networks:
      - app-tier
